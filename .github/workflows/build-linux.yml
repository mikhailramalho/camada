name: Camada Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:

  build-boolector:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake linux-libc-dev ninja-build python3-setuptools clang-tools-9 libfmt-dev && pip install toml
    - name: Setup Catch2
      run: git clone https://github.com/catchorg/Catch2.git && cd Catch2 && cmake -Bbuild -H. -DBUILD_TESTING=OFF && sudo cmake --build build/ --target install
    - name: Setup boolector
      run: git clone https://github.com/boolector/boolector && cd boolector && git reset --hard 3.2.1 && ./contrib/setup-lingeling.sh && ./contrib/setup-btor2tools.sh && ./configure.sh --prefix $PWD/../boolector-release && cd build && make -j4 && make install
    - name: Configure CMake
      run: mkdir build && cd build && cmake .. -GNinja -DCAMADA_ENABLE_REGRESSION=On -DBUILD_SHARED_LIBS=OFF -DSOLVER_BOOLECTOR_DIR=$PWD/../boolector-release-DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release
    - name: Build Camada
      run: cd build && cmake --build . && ninja install
    - uses: actions/upload-artifact@v1
      with:
        name: release-linux
        path: ./release
    - name: Run tests
      run: ctest -j4 --output-on-failure --progress .

  build-z3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake linux-libc-dev ninja-build python3-setuptools clang-tools-9 libfmt-dev && pip install toml
    - name: Setup Catch2
      run: git clone https://github.com/catchorg/Catch2.git && cd Catch2 && cmake -Bbuild -H. -DBUILD_TESTING=OFF && sudo cmake --build build/ --target install
    - name: Setup Z3
      run: wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.8/z3-4.8.8-x64-osx-10.14.6.zip && unzip z3-4.8.8-x64-osx-10.14.6.zip && mv z3-4.8.8-x64-osx-10.14.6 z3
    - name: Configure CMake
      run: mkdir build && cd build && cmake .. -GNinja -DCAMADA_ENABLE_REGRESSION=On -DBUILD_SHARED_LIBS=OFF -DSOLVER_Z3_DIR=$PWD/../z3 -DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release
    - name: Build Camada
      run: cd build && cmake --build . && ninja install
    - uses: actions/upload-artifact@v1
      with:
        name: release-linux
        path: ./release
    - name: Run tests
      run: ctest -j4 --output-on-failure --progress .

  build-mathsat:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake linux-libc-dev ninja-build python3-setuptools clang-tools-9 libfmt-dev && pip install toml
    - name: Setup Catch2
      run: git clone https://github.com/catchorg/Catch2.git && cd Catch2 && cmake -Bbuild -H. -DBUILD_TESTING=OFF && sudo cmake --build build/ --target install
    - name: Setup MathSAT
      run: wget http://mathsat.fbk.eu/download.php?file=mathsat-5.6.3-darwin-libcxx-x86_64.tar.gz -O mathsat.tar.gz && tar xf mathsat.tar.gz && mv mathsat-5.6.3-darwin-libcxx-x86_64 mathsat
    - name: Configure CMake
      run: mkdir build && cd build && cmake .. -GNinja -DCAMADA_ENABLE_REGRESSION=On -DBUILD_SHARED_LIBS=OFF -DSOLVER_MATHSAT_DIR=$PWD/../mathsat -DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release
    - name: Build Camada
      run: cd build && cmake --build . && ninja install
    - uses: actions/upload-artifact@v1
      with:
        name: release-linux
        path: ./release
    - name: Run tests
      run: ctest -j4 --output-on-failure --progress .

  build-yices:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake linux-libc-dev ninja-build python3-setuptools clang-tools-9 libfmt-dev && pip install toml
    - name: Setup Catch2
      run: git clone https://github.com/catchorg/Catch2.git && cd Catch2 && cmake -Bbuild -H. -DBUILD_TESTING=OFF && sudo cmake --build build/ --target install
    - name: Setup Yices 2 (GMP)
      run: wget https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz && tar xf gmp-6.1.2.tar.xz && rm gmp-6.1.2.tar.xz && cd gmp-6.1.2 && ./configure --prefix $PWD/../gmp --disable-shared ABI=64 CFLAGS=-fPIC CPPFLAGS=-DPIC && make -j4 && make install
    - name: Setup Yices 2
      run: git clone https://github.com/SRI-CSL/yices2.git && cd yices2 && git reset --hard Yices-2.6.1 && autoreconf -fi && ./configure --prefix $PWD/../yices --with-static-gmp=$PWD/../gmp/lib/libgmp.a && make -j4 && make static-lib && make install && cp ./build/x86_64-pc-linux-gnu-release/static_lib/libyices.a ../yices/lib
    - name: Configure CMake
      run: mkdir build && cd build && cmake .. -GNinja -DCAMADA_ENABLE_REGRESSION=On -DBUILD_SHARED_LIBS=OFF -DSOLVER_YICES_DIR=$PWD/../yices -DGMP_DIR=$PWD/../gmp -DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release
    - name: Build Camada
      run: cd build && cmake --build . && ninja install
    - uses: actions/upload-artifact@v1
      with:
        name: release-linux
        path: ./release
    - name: Run tests
      run: ctest -j4 --output-on-failure --progress .

  build-cvc4:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake linux-libc-dev ninja-build python3-setuptools clang-tools-9 libfmt-dev && pip install toml
    - name: Setup Catch2
      run: git clone https://github.com/catchorg/Catch2.git && cd Catch2 && cmake -Bbuild -H. -DBUILD_TESTING=OFF && sudo cmake --build build/ --target install
    - name: Setup CVC4
      run: git clone https://github.com/CVC4/CVC4.git && cd CVC4 && git reset --hard b826fc8ae95fc && ./contrib/get-antlr-3.4 && ./contrib/get-symfpu && ./configure.sh --symfpu --optimized --prefix=../cvc4 --static --no-static-binary && cd build && make -j4 && make install
    - name: Configure CMake
      run: mkdir build && cd build && cmake .. -GNinja -DCAMADA_ENABLE_REGRESSION=On -DBUILD_SHARED_LIBS=OFF -DSOLVER_CVC4_DIR=$PWD/../cvc4 -DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release
    - name: Build Camada
      run: cd build && cmake --build . && ninja install
    - uses: actions/upload-artifact@v1
      with:
        name: release-linux
        path: ./release
    - name: Run tests
      run: ctest -j4 --output-on-failure --progress .

