name: Linux Build
on: [pull_request]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install cmake linux-libc-dev ninja-build gperf minisat && pip install toml

      # Setup Catch2. TODO: replace it with https://github.com/marketplace/actions/continuous-benchmark
    - name: Setup Catch2
      run: git clone https://github.com/catchorg/Catch2.git && cd Catch2 && git reset --hard v2.13.2 && cmake -Bbuild -H. -DBUILD_TESTING=OFF -GNinja && cd build && sudo ninja && sudo ninja install

      # Setup/cache GMP
    - name: Cache GMP
      id: cache-gmp-v1
      uses: actions/cache@v2
      with:
        path: gmp
        key: ${{ runner.os }}-gmp-v1

    - name: Setup GMP
      if: steps.cache-gmp-v1.outputs.cache-hit != 'true'
      run: wget https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz && tar xf gmp-6.1.2.tar.xz && rm gmp-6.1.2.tar.xz && cd gmp-6.1.2 && ./configure --prefix $PWD/../gmp --disable-shared ABI=64 CFLAGS=-fPIC CPPFLAGS=-DPIC && make -j && make install

      # Setup/cache Boolector
    - name: Cache Boolector
      id: cache-btor-v1
      uses: actions/cache@v2
      with:
        path: |
          boolector-release
          boolector
        key: ${{ runner.os }}-btor-v1

    - name: Setup Boolector
      if: steps.cache-btor-v1.outputs.cache-hit != 'true'
      run: git clone https://github.com/boolector/boolector && cd boolector && git reset --hard 3.2.1 && ./contrib/setup-lingeling.sh && ./contrib/setup-btor2tools.sh && ./configure.sh --prefix $PWD/../boolector-release && cd build && make -j && make install

      # Setup SymFPU
    - name: Setup SymFPU
      run: git clone https://github.com/martin-cs/symfpu && cd symfpu && git reset --hard 8fbe139bf0071cbe0758d2f6690a546c69ff0053

      # Setup/cache CVC4
    - name: Cache CVC4
      id: cache-cvc4-v1
      uses: actions/cache@v2
      with:
        path: cvc4
        key: ${{ runner.os }}-cvc4-v1

    - name: Setup CVC4
      if: steps.cache-cvc4-v1.outputs.cache-hit != 'true'
      run: git clone https://github.com/CVC4/CVC4.git && cd CVC4 && git reset --hard 1.8 && ./contrib/get-antlr-3.4 && ./configure.sh production --symfpu --optimized --prefix=$PWD/../cvc4 --static --no-static-binary --ninja --symfpu-dir=$PWD/../ && cd build && ninja && ninja install

      # Setup/cache MathSAT
    - name: Cache MathSAT
      id: cache-mathsat-v1
      uses: actions/cache@v2
      with:
        path: mathsat
        key: ${{ runner.os }}-mathsat-v1

    - name: Setup MathSAT
      if: steps.cache-mathsat-v1.outputs.cache-hit != 'true'
      run: wget https://mathsat.fbk.eu/download.php?file=mathsat-5.6.3-linux-x86_64.tar.gz -O mathsat.tar.gz && tar xf mathsat.tar.gz && mv mathsat-5.6.3-linux-x86_64 mathsat

      # Setup/cache STP
    - name: Cache STP
      id: cache-stp-v1
      uses: actions/cache@v2
      with:
        path: stp-release
        key: ${{ runner.os }}-stp-v1

    - name: Setup STP
      continue-on-error: true
      if: steps.cache-stp-v1.outputs.cache-hit != 'true'
      run: git clone https://github.com/stp/stp.git && cd stp && git reset --hard 9a59a72e && mkdir build && cd build && cmake .. -GNinja -DCMAKE_INSTALL_PREFIX=$PWD/../../stp-release && ninja install

      # Setup/cache Yices
    - name: Cache Yices
      id: cache-yices-v1
      uses: actions/cache@v2
      with:
        path: yices
        key: ${{ runner.os }}-yices-v1

    - name: Setup Yices
      if: steps.cache-yices-v1.outputs.cache-hit != 'true'
      run: git clone https://github.com/SRI-CSL/yices2.git && cd yices2 && git reset --hard Yices-2.6.1 && autoreconf -fi && ./configure --prefix $PWD/../yices --with-static-gmp=$PWD/../gmp/lib/libgmp.a && make -j && make static-lib && make install && cp ./build/x86_64-pc-linux-gnu-release/static_lib/libyices.a ../yices/lib

      # Setup/cache Z3
    - name: Cache Z3
      id: cache-z3-v1
      uses: actions/cache@v2
      with:
        path: z3
        key: ${{ runner.os }}-z3-v1

    - name: Setup Z3
      if: steps.cache-z3-v1.outputs.cache-hit != 'true'
      run: wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip && unzip z3-4.8.9-x64-ubuntu-16.04.zip && mv z3-4.8.9-x64-ubuntu-16.04 z3

    - name: Configure Camada
      run: mkdir build && cd build && cmake .. -GNinja -DCAMADA_ENABLE_REGRESSION=On -DBUILD_SHARED_LIBS=OFF -DCAMADA_ENABLE_SOLVER_BOOLECTOR=ON -DSOLVER_BOOLECTOR_DIR=$PWD/../boolector-release -DCAMADA_ENABLE_SOLVER_CVC4=ON -DSOLVER_CVC4_DIR=$PWD/../cvc4 -DSOLVER_CVC4_SYMFPU_DIR=$PWD/../ -DCAMADA_ENABLE_SOLVER_MATHSAT=ON -DSOLVER_MATHSAT_DIR=$PWD/../mathsat -DCAMADA_ENABLE_SOLVER_STP=ON -DSOLVER_STP_DIR=$PWD/../stp-release -DCAMADA_ENABLE_SOLVER_YICES=ON -DSOLVER_YICES_DIR=$PWD/../yices -DGMP_DIR=$PWD/../gmp -DCAMADA_ENABLE_SOLVER_Z3=ON -DSOLVER_Z3_DIR=$PWD/../z3 -DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release -DCMAKE_BUILD_TYPE=Debug
    - name: Build Camada
      run: cd build && ninja && ninja install
    - name: Run tests
      run: cd build/regression && ctest -j --output-on-failure --progress .

